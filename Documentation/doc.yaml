---



# CLASS ELECTION

-
  class: Election
  name: addCandidate
  input:
    candidate:
      text: Alphanumeric string or CondorcetPHP\Condorcet\Candidate object. Your candidate name will be trim(). If null, will create for you a new candidate with an automatic name.


-
  class: Election
  name: addVote
  input:
    vote:
      text: 'String or array representation. Or CondorcetPHP\Condorcet\Vote object. If you not provide yourself Vote object, a new one will be generate for you. '
    tags:
      text: String separated by commas or an array. Will add tags to the vote object for you. But you can too add it yourself to Vote object.


-
  class: Election
  name: canAddCandidate
  input:
    candidate:
      text : String or Condorcet/Vote object.


-
  class: Election
  name: computeResult
  input:
    method:
      text: |
        Not requiered for use object default method. Set the string name of the algorithm for use an specific one.

-
  class: Election
  name: countVotes
  input:
    tags:
      text: 'Tag into string separated by commas, or an Array.'
    with:
      text: Count Votes with this tag ou without this tag.

-
  class: Election
  name: getCandidateObjectFromName
  input:
    candidateName:
      text: Candidate name.

-
  class: Election
  name: getLoser
  input:
    method:
      text: |
        *Only if not null :*

        The loser will be provided by an advanced algorithm of an available advanced Condorcet method. For most of them, it will be the same as the Condorcet Marquis there. But if it does not exist, it may be different; and in some cases they may be multiple.

        If null, Natural Condorcet algorithm will be use.

-
  class: Election
  name: getResult
  input:
    method:
      text: |
        Not requiered for use object default method. Set the string name of the algorithm for use an specific one.


-
  class: Election
  name: isRegisteredCandidate
  input:
    candidate:
      text: |
        Candidate object or candidate string name. String name can working only if the strict mode is active.
    strictMode:
      text: |
        Search comparaison mode. In strict mode, candidate object are compared strictly and a string input can't match anything.
        If strict mode is false, the comparaison will be based on name.

-
  class: Election
  name: getWinner
  input:
    method:
      text: |
        *Only if not null :*

        The winner will be provided by an advanced algorithm of an available advanced Condorcet method. For most of them, it will be the same as the Condorcet Marquis there. But if it does not exist, it may be different; and in some cases they may be multiple.

        If null, Natural Condorcet algorithm will be use.


-
  class: Election
  name: addCandidatesFromJson
  input:
    input:
      text: Json string input.


-
  class: Election
  name: addVotesFromJson
  input:
    input:
      text: Json string input.


-
  class: Election
  name: parseCandidates
  input:
    input:
      text: String or valid path to a text file.
    isFile:
      text: If true, the input is evalatued as path to text file.

-
  class: Election
  name: parseVotes
  input:
    input:
      text: String or valid path to a text file.
    isFile:
      text: If true, the input is evalatued as path to text file.


-
  class: Election
  name: parseVotesWithoutFail
  input:
    input:
      text: String or valid path to a text file.
    isFile:
      text: If true, the input is evalatued as path to text file.
    callBack:
      text: Callback function to execute after each registered vote.


-
  class: Election
  name: removeCandidates
  input:
    candidates_input:
      text: |
          * String matching Candidate Name
          * CondorcetPHP\Condorcet\Candidate object
          * Array populated by CondorcetPHP\Condorcet\Candidate
          * Array populated by string matching Candidate name

-
  class: Election
  name: testIfVoteIsValidUnderElectionConstraints
  input:
    vote:
      text: A vote. Not necessarily registered in this election.



# CLASS VOTE

-
  class: Vote
  name: setRanking
  input:
    ranking:
      text: |
        * Ranking can be add by string like "A > B = C > D" (by candidate string name)
        * Multidimensionnal array like :
           ```php
           array( $candidate1, [$candidate2,$candidate4], $candidate 3 )
           ```
        * Multidimensionnal array with string :
           ```php
           array( 'candidate1Name', ['candidate2Name','candidate4Name'], 'candidate3Name' )
           ```
        * Or combine the 2 last ways.

        Note: You can't use string candidate name if your vote is already linked to an election (by Election::addVote).


